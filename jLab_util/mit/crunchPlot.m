function crunchPlot(selector)

if nargin == 0
   selector = 'init';
end

switch selector
case 'init'
   fig = figure('Color',[0.8 0.8 0.8], ...
      'Position',[100 200 775 420], ...
      'NumberTitle', 'off', ...
      'Name', 'Crunch Plot', ...
      'Tag','Fig1', ...
      'MenuBar', 'none', ...
      'ToolBar','none');
   info.menufile = uimenu('Label','&File', ...
		'Tag','             ');
	%h2 = uimenu('Parent',info.filemenu, ...
	%	'Callback','cruchGUI(', ...
	%'Label','&New Project...', ...
   %'Tag','             ');
	info.menuopen = uimenu('Parent',info.menufile, ...
	'Callback','crunchPlot(''loadDataFile'');', ...
	'Label','&Load Data File...', ...
	'Tag','             ');
	%info.menusave = uimenu('Parent',h1, ...
	%'Callback','proj_save', ...
	%'Label','&Save Project', ...
	%'Tag','             ');
	%h5 = uimenu('Parent',h1, ...
	%'Callback','proj_save_as', ...
	%'Label','Save Project &As...', ...
	%'Tag','             ');
   info.subjectbox = uicontrol('Style','listbox', ...
      'Units','points', ...
      'BackgroundColor',[1 1 1], ...
      'Position',[18.75 168.75 150 112.5], ...
      'String',' ', ...
      'Tag','Listbox1', ...
      'Max',1, ...
      'Min',1, ...
      'Callback', 'crunchPlot(''selectSubject'');', ...
      'Value',1);
   info.sessionbox = uicontrol(	'Style','listbox', ...
      'Units','points', ...
      'BackgroundColor',[1 1 1], ...
      'Position',[206.25 168.75 150 112.5], ...
      'String',' ', ...
      'Tag','Listbox2', ...
      'Max',3, ...
      'Min',1, ...
      'Value',1);
   info.normalbox = uicontrol('Style','listbox', ...
      'Units','points', ...
      'BackgroundColor',[1 1 1], ...
      'Position',[393.75 168.75 150 112.5], ...
      'String',' ', ...
      'Tag','Listbox3', ...
      'Max',1, ...
      'Min',1, ...
      'Value',1);
   info.conditionbox = uicontrol('Style','listbox', ...
      'Units','points', ...
		'BackgroundColor',[1 1 1], ...
		'Min',1, ...
		'Position',[18.75 18.75 150 112.5], ...
		'String',' ', ...
      'Tag','Listbox3', ...
      'Max',3, ...
      'Min',1, ...
		'Value',1);
   info.measurepup = uicontrol('Style','popupmenu', ...
      'Units','points', ...
      'ListboxTop',0, ...
      'Position',[206.25 113.25 187.5 18.75], ...
      'String',' ', ...
      'Tag','PopupMenu1', ...
      'Value',1);
   info.xslicerad = uicontrol('Style','radiobutton', ...
      'Units','points', ...
      'ListboxTop',0, ...
      'Position',[206.25 89.25 112.5 18.75], ...
      'String','Group by Session', ...
      'Max',1, ...
      'Min',0, ...
      'Callback','crunchPlot(''selectGroupSession'');', ...
      'Tag','Radiobutton1');
   info.xconditionrad = uicontrol('Style','radiobutton', ...
      'Units','points', ...
      'ListboxTop',0, ...
      'Position',[206.25 70.5 112.5 18.75], ...
      'String','Group by Condition', ...
      'Max',1, ...
      'Min',0, ...
      'Callback','crunchPlot(''selectGroupCondition'');', ...
      'Tag','Radiobutton1');
   info.plotnormalscheck = uicontrol('Style','checkbox', ...
      'Units','points', ...
      'ListboxTop',0, ...
		'Position',[209.25 45 112.5 18.75], ...
		'String','Plot Normals', ...
      'Max',1, ...
      'Min',0, ...
      'Value',1, ...
		'Tag','Checkbox1');
   info.newfigcheck = uicontrol('Style','checkbox', ...
      'Units','points', ...
      'ListboxTop',0, ...
      'Position',[209.25 21 112.5 18.75], ...
      'String','Make new figure', ...
      'Max',1, ...
      'Min',0, ...
      'Value',1, ...
      'Tag','Radiobutton1');
   info.plotbutton = uicontrol('Style','pushbutton',...
      'Units','points', ...
      'ListboxTop',0, ...
      'Position',[468.75 37.5 75 37.5], ...
      'String','Plot Data', ...
      'Callback','crunchPlot(''plotData'');', ...
      'Tag','Pushbutton1');
   % text and other static stuff
   h1 = uicontrol('Units','points', ...
      'FontSize',12, ...
      'ListboxTop',0, ...
      'Position',[18.75 281.25 147 18.75], ...
      'String','Subject(s)', ...
      'Style','text', ...
      'Tag','StaticText1');
   h1 = uicontrol('Units','points', ...
      'FontSize',12, ...
      'ListboxTop',0, ...
      'Position',[18.75 131.25 150 18.75], ...
      'String','Condition(s)', ...
      'Style','text', ...
      'Tag','StaticText2');
   h1 = uicontrol('Units','points', ...
      'FontSize',12, ...
      'ListboxTop',0, ...
      'Position',[393.75 281.25 150 18.75], ...
      'String','Normal Subjects', ...
      'Style','text', ...
      'Tag','StaticText3');
   h1 = uicontrol('Units','points', ...
      'FontSize',12, ...
      'ListboxTop',0, ...
      'Position',[206.25 131.25 187.5 18.75], ...
      'String','Measure', ...
      'Style','text', ...
      'Tag','StaticText3');
   h1 = uicontrol('Units','points', ...
      'FontSize',12, ...
      'ListboxTop',0, ...
      'Position',[206.25 281.25 150 18.75], ...
      'String','Evaluation Session(s)', ...
      'Style','text', ...
      'Tag','StaticText2');
   % now initialize our other info.XXX fields
   
   set(fig,'UserData',info,...
      'HandleVisibility','callback');
   
case 'loadDataFile'
   % look at stats_console to do the file loading
   [filename,pathname] = uigetfile('*.cdt','Open Data File');
   if (pathname == 0),
   	% 'cancel' condition
      return
   else
      % want to always come back to the last directory
   	cd(pathname);
      % on success, we will need to reset things -- no state, I hope
      fig = gcf;
      info = get(fig,'UserData');
      crunch = load(strcat(pathname, filename), '-MAT');
      names = fieldnames(crunch);
      info.crunch = getfield(crunch,names{1});
      set(fig, 'UserData', info);
      % select one of the "group by" radio buttons
      set(info.xconditionrad, 'Value', 1);
	   set(info.xslicerad, 'Value', 0);
      % just set up the Subject and Sessions lists
      try
         if ~isempty(info.crunch.subject_names)
            set(info.subjectbox, 'String', info.crunch.subject_names);
            set(info.subjectbox, 'Value',1);
            if ~isempty(info.crunch.subjects(1)) & ~isempty(info.crunch.subjects(1).slice_names)
               set(info.sessionbox, 'String', strcat( info.crunch.subjects(1).slice_labels, '--', info.crunch.subjects(1).slice_names));
               set(info.sessionbox, 'Value', 1);
            else
               warndlg(strcat('There are no Sessions for Subject', info.crunch.subject_names(1),' in this Data File!'),'!! Warning !!');
            end
         else
            warndlg('There are no subjects in this Data File!','!! Warning !!');
         end
         norms = info.crunch.subjects(1);
         if ~isempty(norms.slice_names)
            set(info.normalbox, 'String', strcat(norms.slice_names, '--', norms.slice_labels));
            set(info.normalbox, 'Value', 1);
         end
         if ~isempty(info.crunch.conditions)
            set(info.conditionbox, 'String', info.crunch.conditions);
            set(info.conditionbox, 'Value', 1);
         end
         if ~isempty(info.crunch.measures)
            set(info.measurepup, 'String', info.crunch.measures);
            set(info.measurepup, 'Value', 1);
         end
      catch
         warndlg('This Data File is corrupt!', '!!Warning!!');
      end
   end
% case 'saveFile' will have plot scripts
% case 'saveAsFile'
case 'selectSubject'
   % once a subject is selected, then you can populate
   fig = gcf;
   info = get(fig,'UserData');
   selsubj = get(info.subjectbox, 'Value');
   sess = strcat(info.crunch.subjects(selsubj).slice_labels, '--', info.crunch.subjects(selsubj).slice_names);
   set(info.sessionbox, 'String', sess);
   set(info.sessionbox, 'Value', 1);
   % the Slice listbox
case 'selectConditions'
   % this will probably just set a label string -- no, stateless as possible!
case 'selectNormal'
   % label, and value used for getCrunchResults -- stateless warning
case 'selectMeasure'
   % label, map value for getCrunchResults call
case 'selectGroupCondition'
   fig = gcf;
   info = get(fig,'UserData');
   set(info.xconditionrad, 'Value', 1);
   set(info.xslicerad, 'Value', 0);
case 'selectGroupSession'
   fig = gcf;
   info = get(fig,'UserData');
   set(info.xconditionrad, 'Value', 0);
   set(info.xslicerad, 'Value', 1);
case 'plotData'
   % perhaps dynamically enable/disable this button,
   % this code has to read the current selections,
   fig = gcbf;
   info = get(fig,'UserData');
	selsubj = get(info.subjectbox, 'Value');
   selsess = get(info.sessionbox, 'Value');
   selnorm = get(info.normalbox, 'Value');
   selcond = get(info.conditionbox, 'Value');
   selmeas = get(info.measurepup, 'Value');
   plotnorm = get(info.plotnormalscheck, 'Value');
   groupbycond = get(info.xconditionrad, 'Value');
   if length(selcond)==1
      % bar plots with one element in the groups are equivalent no matter which way the data is presented
      % to the "bar" function
      groupbycond = 1;
   end
   plotlabel = strcat(info.crunch.subject_names(selsubj), ' --\ ', info.crunch.measures(selmeas));
   if plotnorm
   	sesslabels = [info.crunch.subjects(selsubj).slice_labels(selsess) ...
            info.crunch.subjects(1).slice_labels(selnorm)];
   else
      sesslabels = [info.crunch.subjects(selsubj).slice_labels(selsess)];
   end
   condlabels = info.crunch.conditions(selcond);
   % call getCrunchResults, plot data, set labels
   % [mean, std] = getCrunchResults(crunchStruct, subject, normal, conditions, measure, slices)
   [mn, std] = getCrunchResults(info.crunch, selsubj, selnorm, selcond, selmeas, selsess, plotnorm);
   % do label, data mapping
   if groupbycond
      % means x is conditions
      mn = mn';
      std = std';
      xlbl = sesslabels;
      ylbl = condlabels;
   else
      xlbl = condlabels;
      ylbl = sesslabels;
   end
   if get(info.newfigcheck, 'Value')
      plotfig = figure;
   else
      % get figure from info object
      if isfield(info,'lastfig')
         plotfig = info.lastfig;
      else
         plotfig = figure;
      end
   end
   info.lastfig = plotfig;
   set(fig, 'UserData', info);
   figure(plotfig);
   h = barstderror(mn,std, 'k', ylbl);
   hold on;
   set(gca, 'XTickLabel', xlbl);
   title(plotlabel);
   ylabel(info.crunch.measures(selmeas));
   hold off;
   % now to put the current data in the workspace
   assignin('base','current_crunch_mean',mn);
   assignin('base','current_crunch_std',std);
   assignin('base','current_crunch_ylabel',ylbl);
   assignin('base','current_crunch_xlabel',xlbl);
   assignin('base','current_crunch',info.crunch);
case 'Quit'
   % clean up, ask to save info struct?
end
